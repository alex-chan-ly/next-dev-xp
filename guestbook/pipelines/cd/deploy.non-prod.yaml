apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: dev-xp-git
spec:
  type: git
  params:
    - name: revision
      value: master
    - name: url
      value: https://github.com/castlemilk/NEXTgen-developer-experience
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: guestbook-frontend-image
spec:
  type: image
  params:
    - name: url
      value: asia.gcr.io/developer-experience-239709/guestbook-frontend
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: guestbook-mongodb-image
spec:
  type: image
  params:
    - name: url
      value: docker.io/mongo:4
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: guestbook-backend-image
spec:
  type: image
  params:
    - name: url
      value: asia.gcr.io/developer-experience-239709/guestbook-backend
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: kubectl-apply
spec:
  inputs:
    resources:
    - name: workspace
      type: git
    - name: image
      type: image
    params:
    - name: path
      description: Path to the manifest to apply
    - name: yqArg
      description:
        Okay this is a hack, but I didn't feel right hard-coding `-d1` down
        below
    - name: yamlPathToImage
      description: The path to the image to replace in the yaml manifest (arg to yq)
    clusters:
    - name: targetCluster
      description: Not yet used, kubectl command below should use this cluster
  steps:
  - name: replace-image
    image: mikefarah/yq
    command: ['yq']
    args:
    - "w"
    - "-i"
    - "${inputs.params.yqArg}"
    - "${inputs.params.path}"
    - "${inputs.params.yamlPathToImage}"
    - "${inputs.resources.image.url}"
  - name: run-kubectl
    image: lachlanevenson/k8s-kubectl
    command: ['kubectl']
    args:
    - 'apply'
    - '-f'
    - '${inputs.params.path}'
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: backend-pipeline
spec:
  resources:
  - name: source-repo
    type: git
  - name: deployment-image
    type: image
  tasks:
  - name: deploy-application
    taskRef:
      name: kubectl-apply
    resources:
      inputs:
      - name: workspace
        resource: source-repo
      - name: image
        resource: deployment-image
    params:
    - name: path
      value: /workspace/workspace/guestbook/kubernetes-manifests/guestbook-backend.yaml
    - name: yamlPathToImage
      value: "spec.template.spec.containers[0].image"
    - name: yqArg
      value: "-d1"
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: frontend-pipeline
spec:
  resources:
  - name: source-repo
    type: git
  - name: deployment-image
    type: image
  tasks:
  - name: deploy-application
    taskRef:
      name: kubectl-apply
    resources:
      inputs:
      - name: workspace
        resource: source-repo
      - name: image
        resource: deployment-image
    params:
    - name: path
      value: /workspace/workspace/guestbook/kubernetes-manifests/guestbook-frontend.yaml
    - name: yamlPathToImage
      value: "spec.template.spec.containers[0].image"
    - name: yqArg
      value: "-d1"
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: mongodb-pipeline
spec:
  resources:
  - name: source-repo
    type: git
  - name: deployment-image
    type: image
  tasks:
  - name: deploy-application
    taskRef:
      name: kubectl-apply
    resources:
      inputs:
      - name: workspace
        resource: source-repo
      - name: image
        resource: deployment-image
    params:
    - name: path
      value: /workspace/workspace/guestbook/kubernetes-manifests/guestbook-mongodb.yaml
    - name: yamlPathToImage
      value: "spec.template.spec.containers[0].image"
    - name: yqArg
      value: "-d1"
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: backend-pipeline
spec:
  pipelineRef:
    name: backend-pipeline
  trigger:
    type: manual
  serviceAccount: 'default'
  resources:
  - name: source-repo
    resourceRef:
      name: dev-xp-git
  - name: deployment-image
    resourceRef:
      name: guestbook-backend-image
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: frontend-pipeline
spec:
  pipelineRef:
    name: frontend-pipeline
  trigger:
    type: manual
  serviceAccount: 'default'
  resources:
  - name: source-repo
    resourceRef:
      name: dev-xp-git 
  - name: deployment-image
    resourceRef:
      name: guestbook-frontend-image
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineRun
metadata:
  name: mongodb-pipeline
spec:
  pipelineRef:
    name: mongodb-pipeline
  trigger:
    type: manual
  serviceAccount: 'default'
  resources:
  - name: source-repo
    resourceRef:
      name: dev-xp-git 
  - name: deployment-image
    resourceRef:
      name: guestbook-mongodb-image